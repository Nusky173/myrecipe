// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                    String  @id @default(cuid())
    userId                String
    type                  String
    provider              String
    providerAccountId     String
    refreshTokenExpiresIn String?
    refresh_token         String?
    access_token          String?
    expires_at            Int?
    token_type            String?
    scope                 String?
    id_token              String?
    session_state         String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique @map("session_token")
    userId       String   @map("user_id")
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt    DateTime @default(now()) @map("created_at")

    @@map("sessions")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    accounts  Account[]
    sessions  Session[]
    myRecipes Recipe[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Recipe {
    id              String   @id @default(cuid())
    userId          String
    name            String   @default("")
    preparationTime Int?
    cookingTime     Int?
    restTime        Int?
    category        Category @default(OTHER)

    user            User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
    steps           Step[]
    ingredientsUsed IngredientOnRecipe[]
}

model Step {
    id           String @id @default(cuid())
    recipeId     String
    ranking      Int    @default(0)
    instructions String @default("")

    recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model Ingredient {
    id   String @id @default(cuid())
    name String @default("")

    onRecipe IngredientOnRecipe[]
}

model IngredientOnRecipe {
    id           String   @id @default(cuid())
    recipeId     String
    ingredientId String
    quantity     Decimal?
    nbPerson     Int?

    Recipe     Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade)
    Ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
}

enum Category {
    STARTER
    MAIN_DISH
    DESERT
    SALAD
    SAUCE
    SOUP
    COCKTAIL
    DRINK
    OTHER
}
